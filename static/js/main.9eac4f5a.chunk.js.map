{"version":3,"sources":["components/TabsCaruselControl.js","App.js","index.js"],"names":["TabsCaruselControl","_ref","changeTabOrder","react_default","a","createElement","className","type","onClick","name","TabsBlockContext","React","createContext","tabsForWord","title","content","map","tab","index","Object","objectSpread","id","App","state","tabs","event","target","_this","setState","prevState","concat","toConsumableArray","slice","onTabSelected","_this2","this","_this$state","length","components_TabsCaruselControl","Provider","value","find","App_TabsBlock","Tab","key","Component","TabsBlock","children","Consumer","_ref2","propTypes","PropTypes","number","isRequired","func","string","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9eac4f5a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabsCaruselControl = ({ changeTabOrder }) => (\n  <div className=\"TabsCaruselControl\">\n    <button\n      type=\"button\"\n      onClick={changeTabOrder}\n      name=\"back\"\n    >\n      {'< Back'}\n    </button>\n\n    <p>Change Tabs Order</p>\n\n    <button\n      type=\"button\"\n      onClick={changeTabOrder}\n      name=\"next\"\n    >\n      {'Next >'}\n    </button>\n  </div>\n);\n\nTabsCaruselControl.propTypes = {\n  changeTabOrder: PropTypes.func.isRequired,\n};\n\nexport default TabsCaruselControl;\n","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport TabsCaruselControl from './components/TabsCaruselControl';\n\nconst TabsBlockContext = React.createContext();\n\nconst tabsOrigin = [\n  { title: 'Tab 1', content: 'Some text 1' },\n  { title: 'Tab 2', content: 'Some text 2' },\n  { title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst tabsForWord = tabsOrigin.map((tab, index) => ({ ...tab, id: index }));\n\nclass App extends React.Component {\n  state = {\n    tabs: tabsForWord,\n    index: 0,\n  };\n\n  changeTabOrder = (event) => {\n    const { name } = event.target;\n\n    if (name === 'next') {\n      this.setState(prevState => ({\n        tabs: [...prevState.tabs.slice(1), ...prevState.tabs.slice(0, 1)],\n      }));\n    }\n\n    if (name === 'back') {\n      this.setState(prevState => ({\n        tabs: [...prevState.tabs.slice(-1), ...prevState.tabs.slice(0, -1)],\n      }));\n    }\n  }\n\n  onTabSelected = (event) => {\n    this.setState({ index: +event.target.name });\n  }\n\n  render() {\n    const { tabs, index } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>{tabs.length} tabs</h1>\n\n        <TabsCaruselControl changeTabOrder={this.changeTabOrder} />\n\n        <TabsBlockContext.Provider\n          value={tabs.find(tab => tab.id === index).content}\n        >\n          <TabsBlock>\n            {tabs.map(tab => (\n              <TabsBlock.Tab\n                title={tab.title}\n                id={tab.id}\n                onTabSelected={this.onTabSelected}\n                index={index}\n                key={tab.id}\n              >\n              </TabsBlock.Tab>\n            ))}\n          </TabsBlock>\n        </TabsBlockContext.Provider>\n      </div>\n    );\n  }\n}\n\nconst TabsBlock = ({ children }) => (\n  <TabsBlockContext.Consumer>\n    {value => (\n      <div>\n        <ul className=\"Tabs__list\">\n          {children}\n        </ul>\n\n        <div\n          className=\"Tabs-content\"\n        >\n          {value}\n        </div>\n      </div>\n    )}\n  </TabsBlockContext.Consumer>\n);\n\nTabsBlock.Tab = ({\n  onTabSelected, title, id, index,\n}) => (\n  <li className=\"Tabs__items\">\n    <button\n      onClick={onTabSelected}\n      name={id}\n      type=\"button\"\n      className={\n        index === id ? 'button button--active' : 'button'\n      }\n      key={id}\n    >\n      {title}\n    </button>\n  </li>\n);\n\nTabsBlock.propTypes = ({\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n});\n\nTabsBlock.Tab.propTypes = ({\n  id: PropTypes.number.isRequired,\n  onTabSelected: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}