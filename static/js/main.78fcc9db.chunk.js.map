{"version":3,"sources":["components/TabsCaruselControl.js","TabsBlockContext.js","components/TabsBlock.js","App.js","index.js"],"names":["TabsCaruselControl","_ref","changeTabOrder","react_default","a","createElement","className","type","onClick","name","TabsBlockContext","React","createContext","TabsBlock","children","src_TabsBlockContext","Consumer","value","Tab","_ref2","onTabSelected","title","id","index","key","propTypes","PropTypes","number","isRequired","func","string","tabsForWord","content","map","tab","Object","objectSpread","App","state","tabs","event","target","_this","setState","prevState","concat","toConsumableArray","slice","_this2","this","_this$state","length","components_TabsCaruselControl","Provider","find","components_TabsBlock","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.78fcc9db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabsCaruselControl = ({ changeTabOrder }) => (\n  <div className=\"TabsCaruselControl\">\n    <button\n      type=\"button\"\n      onClick={changeTabOrder}\n      name=\"back\"\n    >\n      {'< Back'}\n    </button>\n\n    <p>Change Tabs Order</p>\n\n    <button\n      type=\"button\"\n      onClick={changeTabOrder}\n      name=\"next\"\n    >\n      {'Next >'}\n    </button>\n  </div>\n);\n\nTabsCaruselControl.propTypes = {\n  changeTabOrder: PropTypes.func.isRequired,\n};\n\nexport default TabsCaruselControl;\n","import React from 'react';\n\nconst TabsBlockContext = React.createContext();\n\nexport default TabsBlockContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TabsBlockContext from '../TabsBlockContext';\n\nconst TabsBlock = ({ children }) => (\n  <TabsBlockContext.Consumer>\n    {value => (\n      <div>\n        <ul className=\"Tabs__list\">\n          {children}\n        </ul>\n\n        <div\n          className=\"Tabs-content\"\n        >\n          {value}\n        </div>\n      </div>\n    )}\n  </TabsBlockContext.Consumer>\n);\n\nTabsBlock.Tab = ({\n  onTabSelected, title, id, index,\n}) => (\n  <li className=\"Tabs__items\">\n    <button\n      onClick={onTabSelected}\n      name={id}\n      type=\"button\"\n      className={\n        index === id ? 'button button--active' : 'button'\n      }\n      key={id}\n    >\n      {title}\n    </button>\n  </li>\n);\n\nTabsBlock.propTypes = ({\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n});\n\nTabsBlock.Tab.propTypes = ({\n  id: PropTypes.number.isRequired,\n  onTabSelected: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n});\n\nexport default TabsBlock;\n","import React from 'react';\nimport './App.css';\n\nimport TabsCaruselControl from './components/TabsCaruselControl';\nimport TabsBlock from './components/TabsBlock';\n\nimport TabsBlockContext from './TabsBlockContext';\n\nconst tabsOrigin = [\n  { title: 'Tab 1', content: 'Some text 1' },\n  { title: 'Tab 2', content: 'Some text 2' },\n  { title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst tabsForWord = tabsOrigin.map((tab, index) => ({ ...tab, id: index }));\n\nclass App extends React.Component {\n  state = {\n    tabs: tabsForWord,\n    index: 0,\n  };\n\n  changeTabOrder = (event) => {\n    const { name } = event.target;\n\n    if (name === 'next') {\n      this.setState(prevState => ({\n        tabs: [...prevState.tabs.slice(1), ...prevState.tabs.slice(0, 1)],\n      }));\n    }\n\n    if (name === 'back') {\n      this.setState(prevState => ({\n        tabs: [...prevState.tabs.slice(-1), ...prevState.tabs.slice(0, -1)],\n      }));\n    }\n  }\n\n  onTabSelected = (event) => {\n    this.setState({ index: +event.target.name });\n  }\n\n  render() {\n    const { tabs, index } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>{tabs.length} tabs</h1>\n\n        <TabsCaruselControl changeTabOrder={this.changeTabOrder} />\n\n        <TabsBlockContext.Provider\n          value={tabs.find(tab => tab.id === index).content}\n        >\n          <TabsBlock>\n            {tabs.map(tab => (\n              <TabsBlock.Tab\n                title={tab.title}\n                id={tab.id}\n                onTabSelected={this.onTabSelected}\n                index={index}\n                key={tab.id}\n              >\n              </TabsBlock.Tab>\n            ))}\n          </TabsBlock>\n        </TabsBlockContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}